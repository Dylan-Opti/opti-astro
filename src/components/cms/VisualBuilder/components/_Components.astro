---
import ArticleListElement from './ArticlesListComponent/ArticleList.astro'
import Card from './CardComponent/Card.astro'
import Contact from './ContactComponent/Contact.astro'
import CTA from './CTAComponent/CTA.astro'
import Event from './EventComponent/Event.astro'
import Heading from './HeadingComponent/Heading.astro'
import Hero from './HeroComponent/Hero.astro'
import Image from './ImageComponent/Image.astro'
import Paragraph from './ParagraphComponent/Paragraph.astro'
import Video from './VideoComponent/Video.astro'
import { ContentPayload } from '../../../../services/shared/ContentPayload'
import { ArticleListElementFragment, DisplaySettingsFragment } from '../../../../services/graphql/__generated/sdk'
interface Props {
  contentPayload: ContentPayload;
  data: any;
}

const { contentPayload, data } = Astro.props as Props
const { component, displaySettings, displayTemplateKey } = data
const componentType = component._metadata.types[0]
---

{
  componentType === 'HeadingElement' && (
  <Heading
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'CTAElement' && (
  <CTA
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'ImageElement' && (
  <Image
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'VideoElement' && (
  <Video
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'ParagraphElement' && (
  <Paragraph
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'ContactElement' && (
  <Contact
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'EventElement' && (
  <Event
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'CardElement' && (
  <Card
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
    displayTemplateKey={displayTemplateKey}
  />
    )
  }
{
  componentType === 'HeroElement' && (
  <Hero
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
{
  componentType === 'ArticleListElement' && (
  <ArticleListElement
    contentPayload={contentPayload}
    data={component}
    displaySettings={displaySettings}
  />
    )
  }
