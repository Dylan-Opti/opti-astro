---
import {
  CardElementFragment,
  DisplaySettingsFragment
} from '../../../../../services/graphql/__generated/sdk'
import { ContentPayload } from '../../../../../services/shared/ContentPayload'
export interface Props {
  element: CardElementFragment;
  displaySettings: DisplaySettingsFragment[];
  displayTemplateKey: string;
  contentPayload: ContentPayload;
}
const { element } = Astro.props as Props
const imageUrl = element.CoverImage?.url.default || null
---
{element.DisplayAs === 'textOnHover' &&
<a href="#" class="group relative block bg-black h-96">
  <img
    alt=""
    src={imageUrl}
    class="absolute inset-0 h-full w-full object-cover opacity-75 transition-opacity group-hover:opacity-50"
  />

  <div class="relative p-4 sm:p-6 lg:p-8">
    <p class="text-sm font-medium uppercase tracking-widest text-pink-500">{element.Heading}</p>

    <p class="text-xl font-bold text-white sm:text-2xl">{element.Subheading}</p>

    <div class="mt-20 sm:mt-36 lg:mt-48">
      <div
        class="translate-y-8 transform opacity-0 transition-all group-hover:translate-y-0 group-hover:opacity-100"
      >
        <p class="text-lg text-white">
          {element.OverlayText}
        </p>
      </div>
    </div>
  </div>
</a>
  }
{element.DisplayAs === 'textBelowCard' &&
<a href="#" class="block">
  <img
    alt=""
    src={imageUrl}
    class="h-64 w-full object-cover sm:h-80 lg:h-96"
  />

  <h3 class="mt-4 text-6xl font-bold text-gray-900">{element.Heading}</h3>

  <p class="mt-2 text-2xl max-w-sm text-gray-700">
    {element.OverlayText}
  </p>
</a>
  }
{element.DisplayAs === 'textOnLeft' &&
<section class="overflow-hidden bg-gray-50 sm:grid sm:grid-cols-2">
  <div class="p-8 md:p-12 lg:px-16 lg:py-24">
    <div class="mx-auto max-w-xl text-center ltr:sm:text-left rtl:sm:text-right">
      <h2 class="text-5xl font-bold text-gray-900 md:text-5xl">
        {element.Heading}
      </h2>

      <p class="hidden text-gray-500 md:mt-4 md:block">
        {element.OverlayText}
      </p>

      <div class="mt-4 md:mt-8">
        <a
          href={element.CallToAction?.url?.default}
          class="inline-block rounded bg-emerald-600 px-12 py-3 text-sm font-medium text-white transition hover:bg-emerald-700 focus:outline-none focus:ring focus:ring-yellow-400"
        >
          {element.CallToAction?.text}
        </a>
      </div>
    </div>
  </div>

  <img
    alt=""
    src={element.CoverImage?.url?.default}
    class="h-56 w-full object-cover sm:h-full"
  />
</section>
  }

{element.DisplayAs === 'textOnRight' &&
<section class="overflow-hidden bg-gray-50 sm:grid sm:grid-cols-2">
  <img
    alt=""
    src={element.CoverImage?.url?.default}
    class="h-56 w-full object-cover sm:h-full"
  />
  <div class="p-8 md:p-12 lg:px-16 lg:py-24">
    <div class="mx-auto max-w-xl text-center ltr:sm:text-left rtl:sm:text-right">
      <h2 class="text-5xl font-bold text-gray-900 md:text-5xl">
        {element.Heading}
      </h2>

      <p class="hidden text-gray-500 md:mt-4 md:block">
        {element.OverlayText}
      </p>

      <div class="mt-4 md:mt-8">
        <a
          href={element.CallToAction?.url?.default}
          class="inline-block rounded bg-emerald-600 px-12 py-3 text-sm font-medium text-white transition hover:bg-emerald-700 focus:outline-none focus:ring focus:ring-yellow-400"
        >
          {element.CallToAction?.text}
        </a>
      </div>
    </div>
  </div>


</section>
  }

